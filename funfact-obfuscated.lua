-- This file was generated using Luraph Obfuscator v13.5.8

return(function(tK,rK,OK,CK,PK,pK,JK,NK,DK,sK,FK,aK,KK,BK,TK,VK,EK,kK,SK,RK,MK,cK,UK,WK,dK,xK,ZK,mK,gK,jK,YK,eK,vK,hK,QK,iK,qK,GK,uK,XK,o,...)local T,d,I=nil,nil,(nil);local z,b=OK,jK;local H=tostring;do for XJ=0,0X2 do if XJ<=0 then do T=0X1;end;else if XJ==1 then d=coroutine.wrap;else I=hK;end;end;end;end;local l,j,LK=tonumber,tK.rep,(0X0001);local t,C,bK,K=nil,nil,nil,(nil);repeat do if LK<=1 then if LK==0 then K={[0]=0X00001};do LK=4;end;else t=tK.match;LK=2;end;else if LK==0X0002 then C={0X3,1,2};LK=3;else bK={};do LK=0X000;end;end;end;end;until LK>3;do LK=0X1;end;local m,S,M,O,w=nil,nil,nil,nil,nil;repeat if LK<=1 then if LK~=0x0 then m=vK;LK=0;else S=mK;do LK=2;end;end;else if LK<=2 then do M=XK;end;do LK=0x003;end;else if LK==0X3 then do O=SK;end;LK=4;else do w=string.byte;end;do LK=0x05;end;end;end;end;until LK>0x4;local X=(RK);local i=dK or NK;LK=2;local h,f=nil,(nil);do repeat if LK<=0 then h=string.gsub;LK=1;else do if LK==0x1 then do f=iK;end;do break;end;else LK=0X0;end;end;end;until(false);end;local R=next;local E=((M and M()or _ENV));do LK=4;end;local V,Q,k=nil,nil,nil;while LK<=4 do do if not(LK<=0X01)then do if not(LK<=2)then if LK==3 then LK=0X00000;else do V=0X100000000;end;do LK=0x3;end;end;else Q=h(I(Q,0X5),"\046.",function(iq)if w(iq,MK)==72 then do for va=0,0X1 do do if va~=0 then do return"";end;else k=l(I(iq,1,1));end;end;end;end;else local Ea=nil;for Gr=0,1 do if Gr~=0 then if k then local f0=(nil);for Mf=0X00,0X02 do if Mf<=0x0 then do f0=j(Ea,k);end;else if Mf==1 then k=nil;else do return f0;end;end;end;end;else return Ea;end;else Ea=O(l(iq,16));end;end;end;end);LK=0X5;end;end;else if LK==0X0 then do Q=pK;end;do LK=0X1;end;else do LK=0X002;end;end;end;end;end;do LK=3;end;local x,W,Y,s,F=nil,nil,nil,nil,nil;repeat if not(LK<=0X001)then do if not(LK<=0X0002)then if LK==3 then x=function()local zM=w(Q,T,T);local JM=1;while(true)do if JM~=0X0 then T=T+0x1;JM=0;else return zM;end;end;end;LK=0X00;else F={[0X000]={[EK]=0,TK,2,3,QK,5,6,0X0007,0X8,9,10,11,0x0000C,0Xd,14,0Xf},{[0]=1,0,0X00003,0X2,5,4,0X0007,6,0X9,0X008,0XB,10,kK,12,15,0XE},{[0X0]=MK,3,0,0X001,6,0X00007,0X4,0X00005,0X000a,xK,0X8,0X0009,eK,15,0XC,0xD},{[0]=3,2,0x1,0,7,0X6,5,0x4,11,0X0000a,0X009,8,0X0000f,0xe,0XD,12},{[0X00]=4,5,0x6,WK,EK,0x01,0x002,0X3,0Xc,0X000D,0XE,15,8,0X00009,10,0x00b},{[0]=5,4,7,0x00006,1,EK,VK,2,13,0X000C,0x000F,0X000e,0X9,8,11,0XA},{[EK]=0X6,0X00007,0X00004,5,0X0002,3,0X0,1,0XE,15,0X0C,0X000D,YK,11,8,0x09},{[0X0]=7,0X6,5,QK,0x3,0X2,1,0x0,0Xf,14,0XD,12,0X000b,0xA,0X009,0X008},{[0]=0X8,9,10,11,DK,0Xd,14,0XF,0X00000,1,2,3,0x4,0x5,0x6,7},{[0X0]=sK,0X008,0XB,10,0Xd,DK,0Xf,0XE,TK,0X00,3,MK,5,4,WK,KK},{[EK]=10,11,8,0X09,14,15,12,13,0X00002,0x0003,0x0,0X1,6,WK,0X04,5},{[EK]=0X0b,0Xa,0X009,GK,15,14,13,12,0X3,2,0X1,0X00,7,6,5,0x00004},{[0]=0XC,0Xd,14,15,0x0008,0x09,10,11,QK,gK,6,7,EK,0x01,0X2,0X0003},{[0]=0Xd,12,qK,14,9,0X008,11,10,5,QK,7,6,1,0X0,VK,2},{[0X00000]=14,15,12,0X0D,0xA,11,GK,0x9,0X6,7,0x4,0X5,2,0X3,EK,0X1},{[0X0]=0xf,0Xe,0XD,0xC,11,0Xa,sK,0X08,0x07,0X006,0x5,4,3,2,0X1,0X0}};do break;end;end;else do Y=2^52;end;LK=0X01;end;end;else if LK~=0X000 then do s=W-1;end;LK=4;else W=2147483648;LK=0X2;end;end;until false;local D=V-1;local e=function()local p4,g4,Q4,W4=nil,nil,nil,(nil);local H4=0X1;repeat if H4<=0X00000 then do T=T+0X00004;end;H4=2;elseif H4==1 then p4,g4,Q4,W4=w(Q,T,T+0X3);H4=0;else return W4*0X1000000+Q4*0X10000+g4*256+p4;end;until false;end;do local Qj,ij=0,nil;while Qj<=1 do if Qj~=0X0 then for YA=1,FK do local QA=(1);do repeat if QA~=0X0 then do K[YA]=ij;end;QA=0X0000;else ij=ij*0X0002;do QA=0X2;end;end;until QA>0X1;end;end;do Qj=2;end;else do ij=2;end;Qj=1;end;end;end;local g=(function()local TQ,nQ=e(),(e());if not(nQ>=W)then else do nQ=nQ-V;end;end;return nQ*V+TQ;end);local G=(function(km,Wm,Cm)local fm=((km/K[Wm])%K[Cm]);fm=fm-fm%TK;return fm;end);local q=(function()local W4,x4,w4=0,nil,nil;do repeat do if W4==0X0000 then x4=e();W4=0X00001;else w4=e();do break;end;end;end;until false;end;if x4==EK and w4==0 then return 0X0;end;local B4=(-1)^G(w4,31,1);local k4=(TK);local O4=G(w4,0X000014,0XB);local z4=G(w4,0X000,0X014)*V+x4;W4=1;repeat if W4~=0X00 then if O4==0 then if z4~=0 then O4=0X1;k4=0;else do return B4*0x0;end;end;else if O4~=0x7fF then else do if z4~=0X00 then return B4*(TK/EK);else return B4*(0X0000/0X0);end;end;end;end;W4=0X0;else do return B4*(2^(O4-1023))*(z4/Y+k4);end;end;until false;end);local P=(bit or PK);local p=setfenv;local r,v=P and P.bxor or function(JY,NY)local fY,oY=nil,nil;local OY=0x03;do while 0X0538b1305 do if OY<=2 then if OY<=0 then return fY+JY*oY+NY*oY;else if OY~=1 then do while JY>0X00000 and NY>0 do local Zb=JY%16;local wb=NY%16;fY=fY+F[Zb][wb]*oY;JY=(JY-Zb)/16;NY=(NY-wb)/0x10;oY=oY*16;end;end;OY=0;else do NY=NY%V;end;OY=5;end;end;else if OY<=3 then do JY=JY%V;end;do OY=0X4;end;else do if OY~=4 then oY=TK;OY=0X2;else do fY=EK;end;OY=1;end;end;end;end;end;end;end,(rK.insert);local Z=(P and P.band or function(Rt,yt)Rt=Rt%V;local gt=0x1;repeat if gt~=0X0 then yt=yt%V;do gt=0X00000;end;else return((Rt+yt)-r(Rt,yt))/2;end;until(false);end);local HK=({});local J=(P and P.bor or function(J5,n5)J5=J5%V;n5=n5%V;return D-Z(D-J5,D-n5);end);local A,B=error,P and P.bnot or function(Vs)return D-(Vs%V);end;do LK=0x3;end;local U,a,N=nil,nil,(nil);do while LK<0x00004 do do if LK<=0X1 then do if LK==0 then U=U or function(Y1,K1)for Uq=0x0,2 do if not(Uq<=0)then if Uq==1 then if not(K1<0)then else return a(Y1,-K1);end;else return(Y1*K[K1])%V;end;else if K1>=32 then do return 0;end;end;end;end;end;LK=0x1;else do N=JK;end;LK=0X4;end;end;elseif LK==2 then a=P and P.rshift;LK=0;else U=P and P[ZK];LK=2;end;end;end;end;do LK=0X0;end;local u,c,L=nil,nil,nil;do repeat do if not(LK<=0X1)then if LK==2 then c={[VK]=4,[8]=0X3,[0X4]=0X9,[0x6]=4,[5]=4,[2]=WK,[TK]=5,[0x06]=7,[4]=0X04,[0x0]=0X000};LK=3;else L=function()local s7=2;local b7=(nil);do while"\040\117\096+"do if not(s7<=0)then if s7==1 then return b7;else b7=u();s7=0X0;end;else if b7>s then return b7-V;end;s7=0X1;end;end;end;end;LK=0x0004;end;else if LK==0 then a=a or function(WH,wH)if not(wH>=32)then else return 0X000;end;if not(wH<0X00000)then else return U(WH,-wH);end;local oH=0X00000;local gH=nil;while"\062\097\100\096"do if oH~=0 then return gH-gH%0x1;else gH=(WH%V/K[wH]);oH=0X1;end;end;end;LK=0X1;else do u=function()local DL=(0);local qL=(0);do repeat local cq=(w(Q,T,T));do T=T+0X01;end;do qL=J(qL,U(Z(cq,0X7F),DL));end;do if Z(cq,128)==0X0000 then return qL;end;end;DL=DL+0X007;until false;end;end;end;LK=0X02;end;end;end;until LK>=4;end;local oK=(x());local nK=(x());LK=2;local fK,lK,y,yK,zK=nil,nil,nil,nil,nil;do while LK~=0x6 do if LK<=2 then if not(LK<=0X0000)then if LK==1 then y=UK;do LK=0X04;end;else fK=function(wY)local AY,FY,yY,UY=nil,nil,nil,(nil);do for o_=0,3 do do if not(o_<=0X1)then if o_~=2 then UY=r(AY[3],nK);else do yY=r(AY[0X002],nK);end;end;else if o_==0x0 then AY={w(Q,T,T+0X00003)};else FY=r(AY[0X01],nK);end;end;end;end;end;local nY=r(AY[0X4],nK);for lk=0X0,2 do if not(lk<=0)then if lk==1 then T=T+4;else return nY*BK+UY*65536+yY*256+FY;end;else nK=(0xED*nK+wY)%0x0100;end;end;end;do LK=3;end;end;else LK=6;end;elseif not(LK<=0x0003)then if LK==4 then yK=1;do LK=5;end;else zK=function(Gy)local Yy=(e());local uy=("");for oI=0X1,Yy,7997 do local AI=0;local jI,BI=nil,nil;while AI<0X4 do do if not(AI<=0X1)then do if AI~=2 then if jI>Yy then jI=Yy;end;AI=2;else do BI={w(Q,T+oI-1,T+jI-1)};end;do AI=0X0001;end;end;end;else if AI==0X000 then jI=oI+0X1F3D-0X00001;AI=0X0003;else for Kc=1,#BI do do BI[Kc]=r(BI[Kc],oK);end;oK=(Gy*oK+91)%0X100;end;do AI=0X0004;end;end;end;end;end;uy=uy..O(i(BI));end;local Ry=0X00001;while(true)do if Ry~=0 then T=T+Yy;do Ry=0x0;end;else do return uy;end;end;end;end;LK=0;end;else lK=function(...)return z("#",...),{...};end;LK=0X1;end;end;end;local function AK(rA,wA,QA)local oA,PA,NA,dA=QA[0x2],QA[3],QA[0X0005],(QA[0X7]);local TA=(QA[0X0009]);local pA,lA,mA=QA[0x8],QA[1],QA[0x4];local iA=m({},{__mode="v"});local eA=nil;eA=function(...)local M9,i9={},(0);local K9=(0X001);local a9={[1]=QA,[2]=M9};local f9=(M and M()or _ENV);local k9,g9=lK(...);k9=k9-0X1;local b9=((f9==E and rA or f9));for wN=0,k9 do if lA>wN then M9[wN]=g9[wN+0X00001];else do break;end;end;end;do if not PA then g9=nil;else if NA then M9[lA]={n=k9>=lA and k9-lA+1 or 0,i(g9,lA+0X01,k9+1)};end;end;end;if b9~=f9 then if p then(p)(eA,b9);else _ENV=b9;end;end;local x9,B9,D9,E9=b(function()while 0.1898456404540867 do local hb=TA[K9];local Kb=hb[0X6];K9=K9+1;if Kb>=0x2f then if Kb<0X46 then if not(Kb<0x3a)then if not(Kb<64)then if not(Kb<67)then if Kb>=68 then if Kb~=0X45 then local vD=wA[hb[0X3]];M9[hb[0X001]]=vD[0x1][vD[0x2]];else local VX=(hb[1]);do for n3 in R,M9 do if n3>i9 then do(M9)[n3]=nil;end;end;end;end;(M9)[VX]=M9[VX](i(M9,VX+1,i9));i9=VX;for lI in R,M9 do if lI>i9 then(M9)[lI]=nil;end;end;end;else do(M9)[hb[1]]=M9[hb[0X0003]]~=hb[7];end;end;else if Kb>=65 then if Kb==66 then if hb[2]==86 then do K9=K9-0X0001;end;(TA)[K9]={[0x006]=0X000013,[1]=(hb[1]-41),[3]=(hb[3]-0x000029)};else local uM=hb[0x0001];for Kp=uM,uM+(hb[0x003]-0x1)do do M9[Kp]=g9[lA+(Kp-uM)+1];end;end;end;else local K7=hb[1];local i7=(d(function(...)N();for Vu,Ku,Eu,nu,xu,Xu,pu,yu,Du,Tu in...do(N)(true,{Vu,Ku,Eu,nu,xu,Xu,pu,yu,Du,Tu});end;end));(i7)(M9[K7],M9[K7+1],M9[K7+2]);do i9=K7;end;for WG in R,M9 do if not(WG>i9)then else(M9)[WG]=nil;end;end;M9[K7]=i7;K9=hb[3];end;else M9[hb[1]]=HK[hb[0X3]];end;end;else if Kb>=61 then if not(Kb<0X00003E)then if Kb~=0x003f then M9[hb[1]]=M9[hb[0x003]]==M9[hb[0X2]];else M9[hb[0X1]][M9[hb[0X003]]]=hb[0X7];end;else do if M9[hb[3]]~=M9[hb[2]]then else K9=hb[1];end;end;end;else do if Kb>=59 then if Kb==0X03C then local bV=hb[1];i9=bV+0X2;for bz in R,M9 do do if not(bz>i9)then else M9[bz]=nil;end;end;end;M9[bV](M9[bV+1],M9[bV+2]);i9=bV-1;for Pc in R,M9 do if Pc>i9 then(M9)[Pc]=nil;end;end;else b9[hb[0x004]]=M9[hb[1]];end;else M9[hb[0x1]]=hb[4];end;end;end;end;else do if Kb<52 then if Kb>=0X31 then if Kb<0X00032 then if hb[2]==0x22 then do K9=K9-1;end;do TA[K9]={[0X1]=(hb[0x1]-0XbC),[0X00006]=87,[0x3]=(hb[3]-188)};end;else M9[hb[0x00001]]=not M9[hb[3]];end;else do if Kb~=51 then local Vv=(hb[1]);for Ni in R,M9 do if Ni>i9 then(M9)[Ni]=nil;end;end;M9[Vv](i(M9,Vv+0X1,i9));i9=Vv-1;for Dc in R,M9 do if Dc>i9 then do M9[Dc]=nil;end;end;end;else if not(not(M9[hb[3]]<=M9[hb[2]]))then else do K9=hb[0X1];end;end;end;end;end;else if Kb~=48 then local ZU=(hb[1]);i9=ZU+1;for No in R,M9 do do if not(No>i9)then else(M9)[No]=nil;end;end;end;M9[ZU]=M9[ZU](M9[ZU+1]);i9=ZU;for oL in R,M9 do if oL>i9 then M9[oL]=nil;end;end;else(M9)[hb[0X1]]=M9[hb[3]]^M9[hb[2]];end;end;else if Kb<55 then if Kb<0x35 then local y4=(M9[hb[3]]/M9[hb[2]]);(M9)[hb[0x1]]=y4-y4%0X0001;else do if Kb~=0X36 then M9[hb[0x1]]=hb[0X4]*M9[hb[2]];else(M9)[hb[1]]=M9[hb[0X3]]<M9[hb[2]];end;end;end;else do if not(Kb<0X38)then if Kb~=0X39 then M9[hb[1]]=M9[hb[0X03]];else do if M9[hb[3]]<=M9[hb[0X0002]]then K9=hb[1];end;end;end;else if M9[hb[0X3]]~=hb[7]then K9=hb[0X001];end;end;end;end;end;end;end;else do if not(Kb<82)then if not(Kb>=0x058)then do if Kb<85 then do if Kb<83 then if not(M9[hb[0X3]]<=hb[0X7])then K9=hb[0X1];end;else if Kb==84 then M9[hb[1]]=hb[0X4];else if not(M9[hb[0x01]])then else do K9=hb[0x3];end;end;end;end;end;else do if Kb<86 then local ak=hb[1];local uk,Pk=M9[ak]();if uk then for lI=1,hb[2]do(M9)[ak+lI]=Pk[lI];end;K9=hb[0X3];end;else if Kb~=87 then M9[hb[0X0001]][hb[4]]=hb[0X7];else M9[hb[0X1]]=-M9[hb[0X03]];end;end;end;end;end;else if Kb>=0X5B then if not(Kb>=0X5C)then do if hb[2]==0X000050 then K9=K9-1;(TA)[K9]={[1]=(hb[1]-203),[3]=(hb[3]-0X00CB),[6]=0};else if not(not M9[hb[1]])then else K9=hb[3];end;end;end;else if Kb==0X00005d then repeat local qJ,cJ=iA,(M9);if not(#qJ>0)then else local rj=({});for L1,C1 in R,qJ do for Mu,vu in R,C1 do if vu[0X1]==cJ and vu[2]>=0 then local Tr=vu[2];if not rj[Tr]then(rj)[Tr]={cJ[Tr]};end;vu[0X1]=rj[Tr];(vu)[0X2]=1;end;end;end;end;until true;do return true,hb[1],0;end;else local k4=hb[0X1];local h4=(d(function(...)N();for hr,br in...do N(true,hr,br);end;end));(h4)(M9[k4],M9[k4+1],M9[k4+0X2]);i9=k4;do for Nz in R,M9 do do if Nz>i9 then(M9)[Nz]=nil;end;end;end;end;M9[k4]=h4;K9=hb[0x0003];end;end;else if Kb<89 then i9=hb[1];for Sk in R,M9 do do if not(Sk>i9)then else do(M9)[Sk]=nil;end;end;end;end;M9[i9]();i9=i9-0x1;for vs in R,M9 do if vs>i9 then(M9)[vs]=nil;end;end;else if Kb==90 then M9[hb[1]]=M9[hb[3]]<=M9[hb[2]];else(M9)[hb[1]]=U(M9[hb[3]],M9[hb[0X2]]);end;end;end;end;else if Kb>=0X0004C then if Kb<79 then if not(Kb>=0X0004d)then repeat local v2,w2=iA,M9;if not(#v2>0X0000)then else local on={};for Y3,y3 in R,v2 do do for Ax,Kx in R,y3 do if not(Kx[1]==w2 and Kx[2]>=0)then else local Vr=(Kx[0x2]);if not on[Vr]then do on[Vr]={w2[Vr]};end;end;(Kx)[0X1]=on[Vr];Kx[2]=1;end;end;end;end;end;until true;return true,hb[1],1;else if Kb==78 then(M9)[hb[0x1]]=a(M9[hb[3]],M9[hb[2]]);else if hb[0x2]==177 then K9=K9-1;do TA[K9]={[0X0003]=(hb[0x3]-0X0069),[1]=(hb[0X00001]-0X000069),[0X6]=19};end;else repeat local SC,IC=iA,M9;if not(#SC>0)then else local sW=({});for Di,Ji in R,SC do do for ID,RD in R,Ji do if not(RD[1]==IC and RD[2]>=0X0)then else local Hd=(RD[0X2]);if not(not sW[Hd])then else(sW)[Hd]={IC[Hd]};end;do RD[1]=sW[Hd];end;RD[0X2]=0X001;end;end;end;end;end;until true;local pk=(hb[0X1]);return false,pk,pk+hb[0X00003]-2;end;end;end;else do if Kb<0X50 then do M9[hb[0X1]]=M9[hb[0X3]][hb[7]];end;else if Kb==0X51 then do(M9)[hb[0x1]]=M9[hb[0X3]]*M9[hb[2]];end;else local bg=hb[0X1];local pg,fg,Zg=M9[bg]();if not(pg)then else(M9)[bg+0X1]=fg;M9[bg+0X0002]=Zg;do K9=hb[0X3];end;end;end;end;end;end;else do if Kb<73 then do if not(Kb>=71)then local X7=((hb[2]-1)*50);local n7=(hb[0x1]);local i7=(M9[n7]);for uM=1,i9-n7 do(i7)[X7+uM]=M9[n7+uM];end;else do if Kb==72 then do(M9)[hb[0X1]]=#M9[hb[3]];end;else M9[hb[1]]=M9[hb[3]]>=M9[hb[0X0002]];end;end;end;end;else if not(Kb>=0X4a)then M9[hb[1]]=M9[hb[0X0003]]>M9[hb[2]];else do if Kb~=0X4b then local FZ=(hb[1]);local xZ,lZ=M9[FZ]();do if xZ then K9=hb[3];M9[FZ+0X3]=lZ;end;end;else local Gf=hb[0X3];local xf=(M9[Gf]);for Ix=Gf+1,hb[0X2]do do xf=xf..M9[Ix];end;end;do M9[hb[0X1]]=xf;end;end;end;end;end;end;end;end;end;end;elseif Kb>=0X0017 then if Kb>=35 then if Kb<41 then do if Kb<0x00026 then do if not(Kb>=36)then if M9[hb[3]]<M9[hb[0X002]]then K9=hb[0X1];end;else if Kb~=0X25 then(M9)[hb[1]]=true;else(M9)[hb[0X001]]=B(M9[hb[0X3]]);end;end;end;else if not(Kb<39)then if Kb==40 then local R7=hb[0X1];i9=R7+1;for t7 in R,M9 do if not(t7>i9)then else M9[t7]=nil;end;end;M9[R7](M9[R7+1]);i9=R7-1;for Zw in R,M9 do if not(Zw>i9)then else M9[Zw]=nil;end;end;else(M9)[hb[0X00001]]=M9[hb[0X3]]%M9[hb[2]];end;else(M9)[hb[0X1]]=r(M9[hb[0x3]],M9[hb[2]]);end;end;end;else if Kb>=44 then if Kb>=45 then if Kb==0X2e then do M9[hb[0X1]]=b9[hb[0X0004]];end;else local AJ=hb[1];local pJ,wJ=M9[AJ]();if not(pJ)then else do M9[AJ+1]=wJ;end;K9=hb[3];end;end;else a9[hb[0x3]]=M9[hb[0X001]];end;else if not(Kb>=0X00002A)then do HK[hb[3]]=M9[hb[0x1]];end;else if Kb==43 then if hb[2]==0Xd then K9=K9-0X0001;TA[K9]={[0X06]=28,[0X003]=(hb[3]-179),[1]=(hb[1]-179)};else repeat local sL,QL=iA,(M9);if#sL>0 then local u1={};for qf,xf in R,sL do for Sj,Bj in R,xf do do if Bj[1]==QL and Bj[0x02]>=0 then local iE=(Bj[2]);if not u1[iE]then u1[iE]={QL[iE]};end;do(Bj)[1]=u1[iE];end;Bj[2]=0X001;end;end;end;end;end;until true;local fZ=(hb[1]);return false,fZ,fZ;end;else if not(M9[hb[3]]<M9[hb[0x0002]])then K9=hb[1];end;end;end;end;end;else do if Kb>=29 then if Kb>=0x20 then if Kb>=0X00021 then if Kb==34 then M9[hb[0X1]]=J(M9[hb[3]],M9[hb[0x002]]);else local EY=hb[0X01];local UY,GY=M9[EY],(M9[EY+0X1]);local nY=(M9[EY+2]);M9[EY]=d(function()do for EJ=UY,GY,nY do N(true,EJ);end;end;end);K9=hb[0X3];end;else local ti=(wA[hb[0x0003]]);ti[1][ti[0X2]]=M9[hb[1]];end;else if Kb<0X1E then local GS,SS=hb[1],M9[hb[0X3]];do M9[GS+0x00001]=SS;end;M9[GS]=SS[hb[0X7]];else if Kb==31 then repeat local XI,HI=iA,(M9);if not(#XI>0x0)then else local Rs=({});for mh,Nh in R,XI do for T1,A1 in R,Nh do if A1[0X1]==HI and A1[0X2]>=0 then local Ow=(A1[2]);if not(not Rs[Ow])then else Rs[Ow]={HI[Ow]};end;do A1[0x00001]=Rs[Ow];end;(A1)[0X2]=0X1;end;end;end;end;until true;do return;end;else local wn=(hb[1]);i9=wn+0X2;do for h8 in R,M9 do if h8>i9 then(M9)[h8]=nil;end;end;end;M9[wn]=M9[wn](M9[wn+0X01],M9[wn+0x0002]);i9=wn;do for lZ in R,M9 do if lZ>i9 then do(M9)[lZ]=nil;end;end;end;end;end;end;end;else if not(Kb>=26)then if Kb>=0X18 then if Kb~=25 then(M9)[hb[1]]=M9[hb[0x3]]+M9[hb[2]];else M9[hb[0X001]]={i({},0X1,hb[0X3])};end;else do M9[hb[1]]=M9[hb[3]]%hb[0X00007];end;end;else if not(Kb>=0X1B)then if hb[2]==0X000e5 then K9=K9-1;do(TA)[K9]={[1]=(hb[0X00001]-130),[3]=(hb[3]-0X82),[0X00006]=0X2B};end;else repeat local Qi,Gi,bi=iA,M9,hb[0x1];if#Qi>0X0 then local p9={};for N9,j9 in R,Qi do for XY,FY in R,j9 do do if FY[0X1]==Gi and FY[2]>=bi then local uE=FY[0X00002];do if not(not p9[uE])then else(p9)[uE]={Gi[uE]};end;end;FY[0X01]=p9[uE];FY[2]=1;end;end;end;end;end;until true;end;else if Kb==28 then if hb[2]~=0X63 then local xS=(hb[1]);local TS=k9-lA;do if TS<0X0 then do TS=-1;end;end;end;for K2=xS,xS+TS do(M9)[K2]=g9[lA+(K2-xS)+0x1];end;i9=xS+TS;for BP in R,M9 do if not(BP>i9)then else M9[BP]=nil;end;end;else K9=K9-1;TA[K9]={[3]=(hb[0x3]-192),[6]=0X1F,[1]=(hb[1]-192)};end;else M9[hb[1]]=M9[hb[3]]~=M9[hb[0X2]];end;end;end;end;end;end;else if not(Kb>=0Xb)then if not(Kb<5)then if not(Kb>=0X8)then if not(Kb>=0X006)then M9[hb[1]]=M9[hb[0X3]][M9[hb[0X00002]]];else if Kb~=7 then(M9[hb[0x1]])[hb[4]]=M9[hb[0X02]];else if M9[hb[0X00003]]==M9[hb[2]]then else do K9=hb[0X001];end;end;end;end;else do if not(Kb<0X9)then do if Kb==10 then if M9[hb[0X3]]~=hb[7]then else K9=hb[0x1];end;else local ot=(hb[3]);M9[hb[1]]=M9[ot]..M9[ot+1];end;end;else local Au=(pA[hb[3]]);local Xu=(Au[6]);local Pu,Su=#Xu,(nil);do if not(Pu>0)then else do Su={};end;do for NV=1,Pu do local hV=(Xu[NV]);if hV[1]==0x0 then do Su[NV-1]={M9,hV[2]};end;else(Su)[NV-0X1]=wA[hV[0X0002]];end;end;end;v(iA,Su);end;end;do(M9)[hb[1]]=AK(b9,Su,Au);end;end;end;end;else if Kb<2 then if Kb==0x01 then do M9[hb[1]]=false;end;else do repeat local WL,rL=iA,M9;if#WL>0x0 then local HR=({});for aJ,EJ in R,WL do for lx,fx in R,EJ do if not(fx[0X1]==rL and fx[0x0002]>=0x0)then else local Bm=fx[0x002];if not HR[Bm]then HR[Bm]={rL[Bm]};end;(fx)[1]=HR[Bm];(fx)[0X002]=0X1;end;end;end;end;until true;end;return false,hb[1],i9;end;else if Kb>=3 then do if Kb==4 then local un=hb[1];local Dn=(M9[un]);local Mn=((hb[2]-0X1)*50);do for Kj=1,hb[0X0003]do do(Dn)[Mn+Kj]=M9[un+Kj];end;end;end;else do M9[hb[0X01]]=M9[hb[0X003]]/M9[hb[0X0002]];end;end;end;else K9=hb[3];end;end;end;else if Kb>=17 then if not(Kb>=0X14)then if Kb>=0X12 then do if Kb~=0X13 then local wJ,hJ=hb[1],(hb[0X03]);if hJ~=0 then do i9=wJ+hJ-1;end;for Ds in R,M9 do if not(Ds>i9)then else do M9[Ds]=nil;end;end;end;end;local OJ=hb[2];local GJ,nJ=nil,(nil);do if hJ==0X00001 then do GJ,nJ=lK(M9[wJ]());end;else GJ,nJ=lK(M9[wJ](i(M9,wJ+0X1,i9)));end;end;if OJ==0x0001 then i9=wJ-1;else if OJ~=0 then GJ=wJ+OJ-0X2;i9=GJ+1;else GJ=GJ+wJ-0X1;i9=GJ;end;local Z0=(0X0);for i5=wJ,GJ do Z0=Z0+1;M9[i5]=nJ[Z0];end;end;for qz in R,M9 do do if not(qz>i9)then else do M9[qz]=nil;end;end;end;end;else if hb[0X2]~=236 then M9[hb[1]]=nil;else K9=K9-0X001;(TA)[K9]={[0x1]=(hb[0X1]-48),[0X06]=0X00048,[0X003]=(hb[0x3]-0x30)};end;end;end;else local wc=hb[1];local jc=(d(function(...)(N)();for uC in...do N(true,uC);end;end));(jc)(M9[wc],M9[wc+1],M9[wc+2]);i9=wc;for ha in R,M9 do if not(ha>i9)then else do(M9)[ha]=nil;end;end;end;do M9[wc]=jc;end;K9=hb[0X3];end;else if Kb>=0X000015 then do if Kb~=22 then local E1,F1=hb[1],(hb[0X3]);i9=E1+F1-1;for oZ in R,M9 do if not(oZ>i9)then else M9[oZ]=nil;end;end;repeat local NC,qC=iA,M9;if not(#NC>0X0000)then else local Vj={};do for RA,aA in R,NC do do for m1,t1 in R,aA do if t1[0x01]==qC and t1[2]>=0 then local re=t1[2];if not(not Vj[re])then else Vj[re]={qC[re]};end;(t1)[0X00001]=Vj[re];(t1)[2]=1;end;end;end;end;end;end;until true;do return true,E1,F1;end;else local qZ=(hb[1]);i9=qZ+hb[3]-1;for hA in R,M9 do if hA>i9 then(M9)[hA]=nil;end;end;(M9[qZ])(i(M9,qZ+1,i9));do i9=qZ-0X1;end;for x2 in R,M9 do do if not(x2>i9)then else M9[x2]=nil;end;end;end;end;end;else M9[hb[0X1]]={};end;end;else if not(Kb>=0xE)then do if Kb>=0Xc then if Kb~=13 then local Pe=hb[1];i9=Pe+hb[0x3]-0x0001;for e1 in R,M9 do if not(e1>i9)then else do(M9)[e1]=nil;end;end;end;(M9)[Pe]=M9[Pe](i(M9,Pe+0x1,i9));i9=Pe;for wh in R,M9 do do if not(wh>i9)then else M9[wh]=nil;end;end;end;else(M9)[hb[0X00001]]=a9[hb[0X3]];end;else do M9[hb[0x1]]=M9[hb[3]]-M9[hb[2]];end;end;end;else if Kb<0X00f then i9=hb[1];for Mt in R,M9 do if Mt>i9 then M9[Mt]=nil;end;end;M9[i9]=M9[i9]();for JT in R,M9 do if not(JT>i9)then else M9[JT]=nil;end;end;else if Kb~=0x0010 then(M9[hb[1]])[M9[hb[0X3]]]=M9[hb[0X2]];else do for kB=hb[1],hb[3]do M9[kB]=nil;end;end;end;end;end;end;end;end;end;end);if x9 then do if B9 then do if E9==0X1 then return M9[D9]();else return M9[D9](i(M9,D9+0X1,i9));end;end;else if not(D9)then else return i(M9,D9,E9);end;end;end;else do if y(B9)~="\115\116ring"then A(B9,0);else if t(B9,"\097\116\116\101\109pt\032to\032\121iel\100\032\097c\114\111\115\115 m\101ta\109et\104o\100\047C\037-call\032boun\100\097r\121")then return coroutine.yield();end;if not(t(B9,'\094\046\045\058%d\043: '))then A(B9,0);else(A)("Luraph Script:"..(oA[K9-1]or"(internal)")..": "..H(B9),0);end;end;end;end;end;if not(p)then else(p)(eA,rA);end;return eA;end;local function IK()local ib,lb={nil,{},aK,aK,nil,aK,aK,{},{}},(2);local kb,Db=nil,(nil);local bb=({});do while lb~=4 do do if lb<=1 then do if lb==0 then do Db=1;end;do lb=3;end;else ib[0x0006]=kb;lb=4;end;end;else if lb~=0X2 then do(ib)[0Xd]=e();end;lb=1;else kb={};lb=0;end;end;end;end;end;for ls=1,u()do do kb[ls]={x(),u()};end;end;ib[17]=e();local Qb,Jb=ib[0X0009],{};lb=0;local Wb,vb,pb=nil,nil,nil;while lb<=0X3 do if lb<=0X1 then if lb~=0 then pb=x();do lb=0X4;end;else Wb=e()-0X1971;do lb=2;end;end;else if lb==0x2 then for XM=1,Wb do(Qb)[XM]={[1]=L(),[0X4]=x(),[0X6]=u(),[0X005]=x(),[0X3]=L(),[0X7]=x(),[2]=L()};end;do lb=3;end;else do vb=e()-87708;end;lb=1;end;end;end;local tb=x()~=0X0;do for Gt=0x0001,vb do local kt=aK;local Yt=(x());bb[Gt-0X0001]=Db;if Yt==0X6D then kt=I(zK(pb),0x4);elseif Yt==232 then kt=g();elseif Yt==0X0c6 then kt=q();elseif Yt==0X74 then kt=CK;elseif Yt==0X68 then do kt=I(zK(pb),x());end;else if Yt==132 then kt=I(zK(pb),gK);elseif Yt==0XDE then kt=e();elseif Yt==0X9f then do kt=I(zK(pb),q()+e());end;else if Yt==eK then kt=q()+e();else if Yt==cK then kt=uK;else if Yt~=75 then else do kt=e();end;end;end;end;end;end;local Mt=(0X3);local dt=(nil);do repeat do if not(Mt<=0x01)then if Mt==0x2 then if not(tb)then else do(bK)[yK]=dt;end;do yK=yK+1;end;end;Mt=4;else dt={kt,{}};do Mt=0x0000;end;end;elseif Mt==0 then do(Jb)[Db]=dt;end;do Mt=0X1;end;else do Db=Db+1;end;Mt=2;end;end;until Mt>3;end;end;end;(ib)[0x4]=u();ib[0X00012]=x();(ib)[0X000011]=e();do lb=1;end;while true do do if lb==0 then ib[0X000F]=x();do break;end;else ib[0X13]=x();lb=0;end;end;end;do(ib)[0xe]=e();end;ib[0X7]=u();local Lb,Sb,rb,yb=nil,nil,nil,nil;do for dw=0,14 do do if dw<=6 then if not(dw<=0X2)then if dw<=4 then if dw==3 then ib[18]=x();else ib[0XF]=x();end;elseif dw~=0x5 then Sb=e()-0X00aF77;else do Lb=ib[0x8];end;end;else if not(dw<=0X0)then do if dw~=1 then ib[18]=e();else do ib[1]=u();end;end;end;else for tR=1,Wb do local ER=nil;for XC=0,1 do if XC~=0 then do for hR,kR in ipairs(C)do local GR,XR=1,(nil);local RR=c[kR];do while GR<=0X1 do if GR~=0X0 then do XR=ER[RR];end;GR=0X00000;else if XR==6 then local o8,x8=nil,nil;local I8=0;do while I8<2 do if I8~=0 then x8=Jb[o8];I8=0X00002;else o8=bb[ER[kR]];I8=1;end;end;end;if x8 then do(ER)[RR]=x8[1];end;local lg=nil;for EM=0,1 do do if EM~=0X0 then(lg)[#lg+0x1]={ER,RR};else do lg=x8[0X02];end;end;end;end;end;else if XR~=13 then else do(ER)[kR]=tR+ER[kR]+0X1;end;end;end;GR=2;end;end;end;end;end;else ER=ib[0X0009][tR];end;end;end;end;end;else if dw<=0Xa then if not(dw<=8)then if dw==0X009 then do(ib)[3]=G(rb,0x00001,0X1)~=0;end;else(ib)[0X0005]=G(rb,MK,0X00001)~=EK;end;else do if dw==7 then for q9=0,Sb-0X1 do Lb[q9]=IK();end;else do rb=x();end;end;end;end;else if dw<=0X00c then do if dw~=0X00b then for PX=1,yb do local WX,fX,oX=nil,nil,(nil);for PI=0,3 do if not(PI<=1)then do if PI==0X02 then do oX=e();end;else for ir=WX,fX do ib[0x2][ir]=oX;end;end;end;else if PI~=0X0 then fX=e();else WX=e();end;end;end;end;else do yb=e();end;end;end;else if dw==0XD then ib[11]=x();else return ib;end;end;end;end;end;end;end;end;local wK=(IK());for mO=0x00,1 do if mO~=0X0 then do bK=aK;end;else do HK[TK]=bK;end;end;end;return AK(E,nil,wK)(...);end)(string,table,select,true,bitcoroutine.yield,table.unpack,0XC,0x9,31,nil,6,16777216,1,3,0X0000,13,string.char,rawget,0X2,67,type,7,unpack,11,"l\115hi\102t",rawset,5,pcall,10,14,setmetatable,string.sub,0X00004,assert,0XF,8,false,getfenv,{0X070C3,0x00006aC7284,711827427,0X000c3d1Db0D,893350270,398914704,2050937753,0X0a4Fe25Db,1574259705},...);